@page "/Chart"
@inject Data.Db db


<SimpleButton Clicked="@(async () => await HandleRedraw())">Redraw</SimpleButton>

<LineChart @ref="lineChart" TItem="double" />

<table class="table">
    <thead>
        <tr>
            <th scope="col">Tag</th>
            <th scope="col">Time</th>
            <th scope="col">Value</th>
            <th scope="col">Node</th>
            <th scope="col">Type</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var tag in db.Tags.OrderByDescending(p => p.Time).Take(10))
        {

            <tr>
                <td>@tag.Name</td>
                <td>@tag.Time.ToString("yyyy/MM/dd HH:mm:ss")</td>
                <td>@tag.Value</td>
                <td>@tag.Node</td>
                <td>@tag.Type</td>
            </tr>

        }
    </tbody>
</table>


@code{
LineChart<double> lineChart;
protected override async Task OnAfterRenderAsync()
{
    await HandleRedraw();
}

async Task HandleRedraw()
{
    lineChart.Clear();

    lineChart.AddLabel(Labels);

    lineChart.AddDataSet(GetLineChartDataset());

    await lineChart.Update();
}

LineChartDataset<double> GetLineChartDataset()
{
    return new LineChartDataset<double>
    {
        Label = "# of randoms",
        Data = RandomizeData(),
        BackgroundColor = backgroundColors,
        BorderColor = borderColors,
        Fill = true,
        PointRadius = 2,
        BorderDash = new List<int> { }
    };
}

string[] Labels = { "Red", "Blue", "Yellow", "Green", "Purple", "Orange" };
List<string> backgroundColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 0.2f), ChartColor.FromRgba(54, 162, 235, 0.2f), ChartColor.FromRgba(255, 206, 86, 0.2f), ChartColor.FromRgba(75, 192, 192, 0.2f), ChartColor.FromRgba(153, 102, 255, 0.2f), ChartColor.FromRgba(255, 159, 64, 0.2f) };
List<string> borderColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 1f), ChartColor.FromRgba(54, 162, 235, 1f), ChartColor.FromRgba(255, 206, 86, 1f), ChartColor.FromRgba(75, 192, 192, 1f), ChartColor.FromRgba(153, 102, 255, 1f), ChartColor.FromRgba(255, 159, 64, 1f) };

List<double> RandomizeData()
{
    var r = new Random(DateTime.Now.Millisecond);

    return new List<double> { r.Next(3, 50) * r.NextDouble(), r.Next(3, 50) * r.NextDouble(), r.Next(3, 50) * r.NextDouble(), r.Next(3, 50) * r.NextDouble(), r.Next(3, 50) * r.NextDouble(), r.Next(3, 50) * r.NextDouble() };
}
}